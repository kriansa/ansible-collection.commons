---
- name: remove anacron
  become: true
  ansible.builtin.dnf:
    state: absent
    autoremove: true
    name:
      - anacron
      - cronie
      - crontabs

- name: remove cron folders
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/anacrontab
    - /etc/crontab
    - /etc/cron.d
    - /etc/cron.hourly
    - /etc/cron.daily
    - /etc/cron.weekly
    - /etc/cron.monthly
    - /etc/cron.yearly

# timesyncd is not yet available in EPEL 10: https://bugzilla.redhat.com/show_bug.cgi?id=2303892
# in the meantime, we'll continue using chrony
- name: replace chrony by systemd-timesyncd
  when: ansible_facts.distribution_major_version | int < 10
  become: true
  block:
    - name: remove chrony
      ansible.builtin.dnf: name=chrony state=absent autoremove=true

    - name: install systemd-timesyncd
      ansible.builtin.dnf: name=systemd-timesyncd state=latest

    - name: remove chrony user
      ansible.builtin.user: name=chrony state=absent

    - name: remove chrony group
      ansible.builtin.group: name=chrony state=absent

- name: remove rsyslog
  become: true
  ansible.builtin.dnf: name=rsyslog state=absent

- name: stop polkit
  become: true
  when: '"polkitd" in ansible_facts.packages'
  ansible.builtin.systemd: name=polkit state=stopped

- name: remove polkitd
  become: true
  ansible.builtin.dnf: name=polkit state=absent autoremove=yes

- name: remove unused users
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    state: absent
  loop:
    - mail
    - operator
    - games
    - ftp
    - rpc
    - rpcuser
    - polkitd
    - cockpit-ws
    - cockpit-wsinstance

- name: remove unused groups
  become: true
  ansible.builtin.group:
    name: "{{ item }}"
    state: absent
  loop:
    - mail
    - games
    - ftp
    - rpc
    - rpcuser
    - polkitd
    - cockpit-ws
    - cockpit-wsinstance

- name: add /usr/local/bin to PATH for root users
  become: true
  ansible.builtin.copy:
    dest: /etc/profile.d/root-local-bin.sh
    content: |
      # Adds /usr/local/bin to $PATH for root
      [ -z "$EUID" ] && [ -x /usr/bin/id ] && EUID=$(/usr/bin/id -u)
      [ "$EUID" = "0" ] && PATH=${PATH/\/usr\/local\/sbin:/\/usr\/local\/sbin:\/usr\/local\/bin:}

- name: remove old logs
  become: true
  ansible.builtin.file:
    path: /var/log/{{ item }}
    state: absent
  loop:
    - cron
    - firewalld
    - messages
    - secure
    - spooler
    - sssd

- name: disable fwupd on guests
  become: true
  when: ansible_facts.virtualization_role == "guest"
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop:
    - fwupd-refresh.timer
    - fwupd-refresh.service
    - fwupd.service

- name: install linux-firmware on bare metal hosts
  become: true
  ansible.builtin.dnf:
    name: linux-firmware
    state: "{{ 'latest' if ansible_facts.virtualization_role == 'host' else 'absent' }}"

- name: enable predictable network interface names
  become: true
  block:
    - ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/udev/rules.d/80-net-setup-link.rules

    - ansible.builtin.command: grep -q "net.ifnames" /proc/cmdline
      ignore_errors: true
      register: has_ifnames

    - notify: reboot
      when: has_ifnames.rc == 0
      ansible.builtin.command: grubby --update-kernel=ALL --remove-args="biosdevname net.ifnames"

- name: create .config path for root user
  become: true
  ansible.builtin.file:
    path: /root/.config
    state: directory
    mode: "0700"

- name: migrate network sysconfig files to NetworkManager keyfiles
  become: true
  ansible.builtin.command: nmcli connection migrate

- name: use a single network config file
  become: true
  register: nmconnections_files
  ansible.builtin.shell:
    cmd: >-
      rm /etc/NetworkManager/system-connections/eth0.nmconnection &&
      mv "/etc/NetworkManager/system-connections/System eth0.nmconnection" /etc/NetworkManager/system-connections/eth0.nmconnection
    removes: /etc/NetworkManager/system-connections/System eth0.nmconnection

- name: restart NetworkManager
  when: nmconnections_files.changed
  become: true
  ansible.builtin.service:
    name: NetworkManager
    state: restarted

- name: rename "System eth0" to eth0
  become: true
  ansible.builtin.shell: nmcli connection modify "System eth0" connection.id eth0 &>/dev/null || true
